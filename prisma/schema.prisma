// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  phoneNumber  String    @unique
  firstName    String?
  password     String
  isAdmin      Boolean   @default(false)
  referralCode String    @unique
  referrer     User?     @relation("ReferrerReferral", fields: [referrerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  referee      User[]    @relation("ReferrerReferral")
  referrerId   String?   @db.ObjectId
  accounts     Account[] @relation("UserAccounts")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  Account Account[]
}

model Account {
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  userId           String        @db.ObjectId
   user              User      @relation("UserAccounts", fields: [userId], references: [id])
  balance          Float
  level            Int
  dailyEarningRate Float
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  Transaction      Transaction[]
  User             User          @relation(fields: [userId], references: [id])
}

model Transaction {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  accountId     String            @db.ObjectId
  account       Account           @relation(fields: [accountId], references: [id])
  type          TransactionType
  amount        Float
  status        TransactionStatus
  transactionId String? // Optional field for external transaction IDs
  createdAt     DateTime          @default(now())
}

enum TransactionType {
  RECHARGE
  WITHDRAWAL
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}
